# -*- coding: utf-8 -*-
"""KNN 연습

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Ap65CJacSwyDa38Aul3O_9QhOvygBD1

# 데이터 전처리
pandas를 사용하여 데이터를 사용하려는 알고리즘 모델에 맞게 가공하는 것을 목적으로 한다.
"""

import pandas as pd
import numpy as np
import glob

"""DATA를 확인하기 위해 저장소에 있는 파일을 불러온다.
drive에 업로드 되어 있는 파일을 사용하기 위해 아래의 코드를 실행 시킨 후, authorization Code 입력
"""

from google.colab import drive
drive.mount('/content/gdrive')

link='/content/gdrive/My Drive/'

"""# 데이터 적재"""

data = pd.read_csv(link+'high_diamond_ranked_10min.csv', sep=',', encoding='CP949')
data = pd.DataFrame(data)

data.drop(['gameId'], axis=1, inplace=True)
print (data.shape)
data.head()



from sklearn.model_selection import train_test_split

df_train, df_test = train_test_split(data, test_size=0.2, random_state = 0)
df_train.shape, df_test.shape

y_train = df_train['blueWins']
del df_train['blueWins']

y_test = df_test['blueWins']
del df_test['blueWins']

numeric_features = df_train.dtypes[df_train.dtypes!='object'].index
df_train[numeric_features]=df_train[numeric_features].apply(
    lambda x:(x-x.mean())/(x.std())
)
df_train

from sklearn.neighbors import  KNeighborsClassifier

from sklearn import preprocessing

knn = KNeighborsClassifier(n_neighbors=110, weights="distance", metric="euclidean")

knn.fit(df_train, y_train)

y_pred = knn.predict(df_test)

print ("테스트 세트 정확도 : {:.2f}".format(np.mean(y_pred==y_test)))

